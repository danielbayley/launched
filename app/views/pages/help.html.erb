<h3>What is this, anyway?</h3>

<p>
  Launchd was designed at Apple as a replacement for init.d, crond, rc.d, etc.
  Launchd not only provides everything that cron does, it can do so with even
  more flexibility and power. The only downside is that the <a
    href="https://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man5/launchd.plist.5.html">XML
    configuration files required by launchd</a> are nowhere near as simple to
  write.
</p>

<p>
  That's where this application comes in. It's a simple way to generate common
  cron-style launchd plist files for use on your own system.
</p>

<h3>Installing a plist</h3>

<p>To install a plist to run as your user:</p>

<pre><code># Create a folder for for the plists, if it doesn't already exist
mkdir -p ~/Library/LaunchAgents

# Put your plist in this directory
cp ~/Downloads/<%= Launched::DOMAIN %>.your_script.plist ~/Library/LaunchAgents

# And load it up with launchctl:
launchctl load -w ~/Library/LaunchAgents/<%= Launched::DOMAIN %>.your_script.plist
</code></pre>

<p>
  If your plist needs to run as a different user, including root, you'll need to
  install it to the systemwide launch daemons folder instead:
</p>

<pre><code># Put your plist in the system directory
sudo cp ~/Downloads/<%= Launched::DOMAIN %>.your_script.plist /Library/LaunchDaemons

# And load it up with launchctl:
sudo launchctl load -w /Library/LaunchDaemons/<%= Launched::DOMAIN %>.your_script.plist
</code></pre>

<p>
  When you generate a launchd plist with this application, there are also
  instructions and scripts for installation on the generated plist's page.
</p>

<h3>Uninstalling a plist</h3>

<p>Uninstalling a plist is just as easy as installing it. For a user plist:</p>
<pre><code>launchctl load -w ~/Library/LaunchAgents/<%= Launched::DOMAIN %>.your_script.plist</code></pre>

<p>And for root,</p>
<pre><code>sudo launchctl load -w /Library/LaunchDaemons/<%= Launched::DOMAIN %>.your_script.plist</code></pre>

<h3>Debugging</h3>

<p>
  If your plist doesn't seem to be running correctly, you can debug it by
  looking at the logs in console.app. Fortunately, launchd prefixes any activity
  with the label defined in your plist. So, continuing with the above example,
  search for <code><%= Launched::DOMAIN %>.your_script</code> to
  find any log entries related to your job.
</p>

<h3>Isn't there a tool to make this easier?</h3>

<p>
  Yes. <code>brew install lunchy &amp;&amp; lunchy --help</code>
</p>

<h3>Privacy and Security</h3>

<p>
  This application has no way of listing the plists that have been created so
  far, and each plist is identified by a UUID rather than an incrementing id to
  prevent enumeration. Still, you should ensure that you keep private data out
  of the plists if possible.
</p>

<p>
  To prevent accidental or malicious changes, it's not possible to edit a plist.
  Instead, each new version of a plist has a different identifier.
</p>

<h3>Learn More</h3>

<pre><code>man launchd
man launchd.plist
</code></pre>
